{"version":3,"sources":["../../src/gltf-loader.js"],"names":["parseGLTFSync","parseGLTF","GLTFParser","DEFAULT_OPTIONS","gltf","parserVersion","uri","parse","arrayBuffer","options","useGLTFParser","gltfParser","byteOffset","parseSync","name","extensions","text","binary","test","defaultOptions"],"mappings":";;;;;;AAEA,SAAQA,aAAR,EAAuBC,SAAvB,QAAuC,kBAAvC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,aAAa,EAAE;AADX,GADgB;AAItBC,EAAAA,GAAG,EAAE;AAJiB,CAAxB;AAOA,OAAO,eAAeC,KAAf,CAAqBC,WAArB,EAAkCC,OAAO,GAAG,EAA5C,EAAgD;AAErDA,EAAAA,OAAO,qBAAON,eAAP,MAA2BM,OAA3B,CAAP;;AAEA,MAAIA,OAAO,CAACL,IAAR,CAAaC,aAAb,KAA+B,CAA/B,IAAoCI,OAAO,CAACC,aAAR,KAA0B,KAAlE,EAAyE;AACvE,UAAMC,UAAU,GAAG,IAAIT,UAAJ,EAAnB;AACA,WAAOS,UAAU,CAACJ,KAAX,CAAiBC,WAAjB,EAA8BC,OAA9B,CAAP;AACD;;AAGD,QAAM;AAACG,IAAAA,UAAU,GAAG;AAAd,MAAmBH,OAAzB;AACA,QAAML,IAAI,GAAG,EAAb;AACA,SAAO,MAAMH,SAAS,CAACG,IAAD,EAAOI,WAAP,EAAoBI,UAApB,EAAgCH,OAAhC,CAAtB;AACD;AAED,OAAO,SAASI,SAAT,CAAmBL,WAAnB,EAAgCC,OAAO,GAAG,EAA1C,EAA8C;AAEnDA,EAAAA,OAAO,qBAAON,eAAP,MAA2BM,OAA3B,CAAP;;AAGA,MAAIA,OAAO,CAACL,IAAR,CAAaC,aAAb,KAA+B,CAA/B,IAAoCI,OAAO,CAACC,aAAR,KAA0B,KAAlE,EAAyE;AACvE,WAAO,IAAIR,UAAJ,GAAiBW,SAAjB,CAA2BL,WAA3B,EAAwCC,OAAxC,CAAP;AACD;;AAGD,QAAM;AAACG,IAAAA,UAAU,GAAG;AAAd,MAAmBH,OAAzB;AACA,QAAML,IAAI,GAAG,EAAb;AACA,SAAOJ,aAAa,CAACI,IAAD,EAAOI,WAAP,EAAoBI,UAApB,EAAgCH,OAAhC,CAApB;AACD;AAED,eAAe;AACbK,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,KAAT,CAFC;AAGbC,EAAAA,IAAI,EAAE,IAHO;AAIbC,EAAAA,MAAM,EAAE,IAJK;AAKbC,EAAAA,IAAI,EAAE,MALO;AAMbX,EAAAA,KANa;AAObM,EAAAA,SAPa;AAQbM,EAAAA,cAAc,EAAEhB;AARH,CAAf","sourcesContent":["// Binary container format for glTF\n\nimport {parseGLTFSync, parseGLTF} from './lib/parse-gltf';\nimport GLTFParser from './lib/deprecated/gltf-parser';\n\nconst DEFAULT_OPTIONS = {\n  gltf: {\n    parserVersion: 1 // the new parser that will be the only option in V2.\n  },\n  uri: '' // base URI\n};\n\nexport async function parse(arrayBuffer, options = {}) {\n  // Apps like to call the parse method directly so apply default options here\n  options = {...DEFAULT_OPTIONS, ...options};\n  // Deprecated: Return GLTFParser instance\n  if (options.gltf.parserVersion !== 2 && options.useGLTFParser !== false) {\n    const gltfParser = new GLTFParser();\n    return gltfParser.parse(arrayBuffer, options);\n  }\n\n  // Return pure javascript object\n  const {byteOffset = 0} = options;\n  const gltf = {};\n  return await parseGLTF(gltf, arrayBuffer, byteOffset, options);\n}\n\nexport function parseSync(arrayBuffer, options = {}) {\n  // Apps like to call the parse method directly so apply default options here\n  options = {...DEFAULT_OPTIONS, ...options};\n\n  // Deprecated: Return GLTFParser instance\n  if (options.gltf.parserVersion !== 2 && options.useGLTFParser !== false) {\n    return new GLTFParser().parseSync(arrayBuffer, options);\n  }\n\n  // Return pure javascript object\n  const {byteOffset = 0} = options;\n  const gltf = {};\n  return parseGLTFSync(gltf, arrayBuffer, byteOffset, options);\n}\n\nexport default {\n  name: 'glTF',\n  extensions: ['gltf', 'glb'],\n  text: true,\n  binary: true,\n  test: 'glTF',\n  parse,\n  parseSync, // Less features when parsing synchronously\n  defaultOptions: DEFAULT_OPTIONS\n};\n"],"file":"gltf-loader.js"}