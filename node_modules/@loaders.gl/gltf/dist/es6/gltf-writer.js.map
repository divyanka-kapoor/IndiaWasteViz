{"version":3,"sources":["../../src/gltf-writer.js"],"names":["encodeGLTFSync","encodeSync","gltf","options","byteOffset","byteLength","arrayBuffer","ArrayBuffer","dataView","DataView","name","extensions","binary","defaultOptions","useGLTFBuilder"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,OAAO,GAAG,EAApC,EAAwC;AACtC,QAAM;AAACC,IAAAA,UAAU,GAAG;AAAd,MAAmBD,OAAzB;AAGA,QAAME,UAAU,GAAGL,cAAc,CAACE,IAAD,EAAO,IAAP,EAAaE,UAAb,EAAyBD,OAAzB,CAAjC;AACA,QAAMG,WAAW,GAAG,IAAIC,WAAJ,CAAgBF,UAAhB,CAApB;AACA,QAAMG,QAAQ,GAAG,IAAIC,QAAJ,CAAaH,WAAb,CAAjB;AACAN,EAAAA,cAAc,CAACE,IAAD,EAAOM,QAAP,EAAiBJ,UAAjB,EAA6BD,OAA7B,CAAd;AAEA,SAAOG,WAAP;AACD;;AAED,eAAe;AACbI,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,UAAU,EAAE,CAAC,KAAD,CAFC;AAGbV,EAAAA,UAHa;AAIbW,EAAAA,MAAM,EAAE,IAJK;AAKbC,EAAAA,cAAc,EAAE;AACdC,IAAAA,cAAc,EAAE;AADF;AALH,CAAf","sourcesContent":["import {encodeGLTFSync} from './lib/encode-gltf';\n\nfunction encodeSync(gltf, options = {}) {\n  const {byteOffset = 0} = options;\n\n  // Calculate length, then create arraybuffer and encode\n  const byteLength = encodeGLTFSync(gltf, null, byteOffset, options);\n  const arrayBuffer = new ArrayBuffer(byteLength);\n  const dataView = new DataView(arrayBuffer);\n  encodeGLTFSync(gltf, dataView, byteOffset, options);\n\n  return arrayBuffer;\n}\n\nexport default {\n  name: 'glTF',\n  extensions: ['glb'], // We only support encoding to binary GLB, not to JSON GLTF\n  encodeSync,\n  binary: true,\n  defaultOptions: {\n    useGLTFBuilder: true // Note: GLTFBuilder will be removed in v2\n  }\n};\n"],"file":"gltf-writer.js"}